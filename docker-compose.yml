version: "3.9"

services:
  db:
    image: postgres:14.2
    restart: unless-stopped
    container_name: ctf_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - ctf_network

  app:
    build: .
    command: python3 manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    container_name: ctf_app
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
    networks:
      - ctf_network

  # sonarqube:
  #   image: sonarqube:10.0.0-community
  #   command: -Dsonar.ce.javaOpts=-Xmx1192m -Dsonar.web.javaOpts=-Xmx1192m
  #   restart: unless-stopped
  #   container_name: sonarqube
  #   depends_on:
  #     - db
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - ctf_network
  #   environment:
  #     - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar_db
  #     - SONARQUBE_JDBC_USERNAME=${POSTGRES_USER}
  #     - SONARQUBE_JDBC_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - sonarqube_conf:/opt/sonarqube/conf
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

networks:
  ctf_network:
    driver: bridge

# volumes:
#   sonarqube_bundled-plugins:
#   sonarqube_conf:
#   sonarqube_data:
#   sonarqube_db:
#   sonarqube_extensions: